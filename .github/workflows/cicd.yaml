# .github/workflows/tofu.yml
name: 'TOFU GKE and ArgoCD Deploy'

on:
  push:
    branches:
      - main
      - develop
      - 'gke-demos'

jobs:
  tofu:
    name: 'TOFU Apply'
    runs-on: ubuntu-latest

    env:
      TOFU_ENV: ${{ github.ref_name == 'main' && 'prod' || github.ref_name == 'develop' && 'stage' || 'sandbox' }}
    
    steps:
    - name: 'Checkout code'
      uses: actions/checkout@v3

    - name: Install git-crypt
      run: |
        sudo apt-get update
        sudo apt-get install git-crypt
    
    - name: Unlock git-crypt with symmetric key
      env:
        GIT_CRYPT_KEY: ${{ secrets.GIT_CRYPT_KEY }}
      run: |
        echo "$GIT_CRYPT_KEY" | base64 --decode > symmetric.key
        git-crypt unlock symmetric.key

    - name: 'Set up Google Cloud SDK'
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: key.json
        export_default_credentials: true

    - name: 'Set up OpenTofu'
      uses: opentofu/setup-opentofu@v1

    - name: 'TOFU Format Check'
      run: |
        echo "Running TOFU fmt..."
        tofu fmt -check

    - name: 'TOFU Init with Partial Backend Configuration'

      run: |
        sed -i "s|^project_id         =.*|project_id         = '$PROJECT_ID'|g" ${{ env.TOFU_ENV }}.tfvars
        sed -i "s|^gke_enc_key         =.*|gke_enc_key         = 'gke-${{ env.TOFU_ENV }}-enc-key'|g" ${{ env.TOFU_ENV }}.tfvars
        sed -i "s|^gke_key_ring         =.*|gke_key_ring         = 'gke-${{ env.TOFU_ENV }}-ring'|g" ${{ env.TOFU_ENV }}.tfvars
        echo "Running TOFU init..."
        tofu init -backend-config="bucket=gauro-${{ env.TOFU_ENV }}-tfstate" \
                  -backend-config="prefix=tofu/state/${{ env.TOFU_ENV }}" \
                  -backend-config="credentials=key.json" 

    - name: 'TOFU Plan'
      env:
        GOOGLE_APPLICATION_CREDENTIALS: key.json
      run: |
        echo "Running TOFU plan for environment: ${{ env.TOFU_ENV }}"
        tofu plan -var-file="${{ env.TOFU_ENV }}.tfvars" -out=tfplan

    - name: 'TOFU Apply'
      env:
        GOOGLE_APPLICATION_CREDENTIALS: key.json
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' && github.event_name != 'pull_request'
      run: |
        echo "Applying TOFU changes for environment: ${{ env.TOFU_ENV }}"
        tofu apply tfplan
